{"version":3,"sources":["logo.svg","components/ShowQuestions.jsx","components/Prac.jsx","components/MyComponents.jsx","App.js","reportWebVitals.js","index.js"],"names":["ShowQuestions","props","state","console","log","this","ra","rat","cat","toString","replace","Rating","name","value","readOnly","question","Component","Prac","checkans","val","data","correct_answer","setState","lbl","cr_Func","isnext","isDisa","isdisabled","ans","incorrect_answers","push","difficulty","category","map","d","i","Button","variant","color","disabled","dis","onClick","va","MyComponents","setNext","Stepper","btndis","getScore","countCorrect","countWrong","showbtn","questions","q","C_Answer","per","style","margin","Grid","container","spacing","item","xs","LinearProgress","height","length","Paper","ProgressBar","striped","now","btnnext","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a2179b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Rating from '@material-ui/lab/Rating'; \r\n\r\nimport React, { Component } from 'react'\r\nimport { ProgressBar } from 'react-bootstrap';\r\n\r\nexport default class ShowQuestions extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log(\"Props\",this.props ); \r\n        let ra=0;\r\n        if (this.props.rat==\"hard\") {\r\n            ra=3\r\n        }\r\n        else if (this.props.rat==\"easy\"){\r\n            ra=1;\r\n        }\r\n        else if (this.props.rat==\"medium\"){\r\n            ra=2\r\n        } \r\n        return (\r\n            <div>\r\n            <h3>{this.props.cat.toString().replace(/%20/g,' ')}</h3>\r\n            <Rating name=\"read-only\" value={ra}  readOnly />\r\n            <h3>{this.props.question}</h3> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import { Button } from '@material-ui/core';\r\nimport React, { Component } from 'react'\r\nimport ShowQuestions from './ShowQuestions';\r\n \r\nexport default class Prac extends Component {\r\n    constructor(props){\r\n        super(props) \r\n        this.state={ \r\n            lbl:\"\"\r\n        }\r\n    }  \r\n    checkans=(val)=>{ \r\n        let answ=this.props.data.correct_answer;\r\n        if (val==answ) {\r\n            this.setState({lbl:\"Correct..!\"}) \r\n            this.props.cr_Func(true);\r\n        }   \r\n        else{\r\n            this.setState({lbl:\"Incorrect.\"})\r\n            this.props.cr_Func(false);\r\n        }    \r\n        this.props.isnext(true);\r\n    }\r\n \r\n    render() { \r\n        console.log(this.props.isDisa);\r\n        let{isdisabled}=this.state;\r\n        let{question}=this.props.data; \r\n        let ans=this.props.data.incorrect_answers;\r\n        ans.push(this.props.data.correct_answer);\r\n        //console.log(\"cate\",this.props.data.category);\r\n\r\n        return (\r\n            <div> \r\n                <ShowQuestions rat={this.props.data.difficulty} cat={this.props.data.category} question={question.toString().replace(/%20/g,' ').replace(/%3F/g,'?')}/>\r\n                {ans.map((d,i) =>\r\n                <div > \r\n                <Button variant=\"contained\" color=\"primary\" \r\n                disabled={this.props.dis} \r\n                key={i} onClick={(va)=>this.checkans(d)}>\r\n                    {d.toString().replace(/%20/g,' ')}\r\n                </Button>  \r\n                </div> )}\r\n                <h1>{this.state.lbl}</h1> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport q from \"../questions.json\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { \r\n  Button,\r\n  Grid,\r\n  LinearProgress,\r\n  Paper, \r\n} from \"@material-ui/core\";\r\nimport ShowQuestions from './ShowQuestions'; \r\nimport Prac from './Prac';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nexport default class MyComponents extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            questions:q.map(({question})=>question.replace(/%20/g, ' ').replace(/%3F/,'?')),\r\n            C_Answer:q.map(({correct_answer})=>correct_answer),\r\n            Stepper:1,\r\n            countCorrect:0,\r\n            countWrong:0,\r\n            btndis:false,\r\n            //btnnext:true\r\n        }\r\n    } \r\n\r\n    componentDidMount(){  \r\n    }\r\n    setNext=()=>{\r\n        this.setState({Stepper:this.state.Stepper+1 ,btndis:!this.state.btndis});\r\n    }\r\n    getScore=(val)=>{\r\n       // console.log(val); \r\nif (val) {\r\n    this.setState({countCorrect:this.state.countCorrect+1})\r\n}\r\nelse{\r\n    this.setState({countWrong:this.state.countWrong+1})\r\n}\r\n \r\n    }\r\n\r\nshowbtn=(va)=>{\r\nthis.setState({btndis:va});\r\n//this.setState({btnnext:va}); \r\n    } \r\n    render() {\r\n        let{countWrong,countCorrect}=this.state;\r\n        let per = ((countCorrect/countWrong)*100); \r\n        return (<div style={{margin:\"20px\"}}>\r\n\r\n{this.state.Stepper<20?<Grid container spacing={3}> \r\n                <Grid item xs={12}>\r\n                <LinearProgress variant=\"determinate\" value={this.state.Stepper*5} style={{height:\"20px\"}} />\r\n                \r\n                    <h3>Question {this.state.Stepper} of {this.state.questions.length}</h3>\r\n                    \r\n                    <Paper>\r\n                         <Prac \r\n                         isnext={this.showbtn} \r\n                         dis={this.state.btndis} \r\n                         cr_Func={this.getScore} \r\n                         data={q[this.state.Stepper]}/> \r\n                    </Paper>\r\n\r\n<h5>Score {per}%</h5>\r\n                    <ProgressBar>\r\n                        <ProgressBar striped variant=\"success\" now={0} key={1} />\r\n                         <ProgressBar variant=\"warning\" now={per} key={2} />\r\n                        <ProgressBar striped variant=\"danger\" now={0} key={3} />\r\n                    </ProgressBar> \r\n                </Grid>\r\n                 <Button onClick={this.setNext} disabled={this.state.btnnext}>NEXT</Button>\r\n                 \r\n                 <br />\r\n                 <br />              \r\n            </Grid> :<h1>Good Luck</h1>}\r\n\r\n        </div> )      \r\n    }\r\n} ","import logo from './logo.svg';\r\nimport './App.css';\r\nimport MyComponents from './components/MyComponents'; \r\nfunction App() {\r\n  return (\r\n    // <div className=\"App\">\r\n    <div >\r\n\r\n<MyComponents />\r\n\r\n      {/* <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}